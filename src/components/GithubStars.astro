---
import { chunk, clamp, take } from "es-toolkit";
import { getCollection } from "astro:content";

import { Section } from "./Section";
import { getItemsPerPage } from "../helpers/getItemsPerPage.astro";
import { StyledTextLink } from "./StyledTextLink";

const searchParam = 'githubStars';
const itemsPerPage = getItemsPerPage();
const collection = await getCollection("github-stars");
const collectionData = take(
  collection.map((entry) => entry.data),
  itemsPerPage *
    Math.floor(collection.length / itemsPerPage),
);
const chunks = chunk(collectionData, itemsPerPage);

let index = 0;
if (Astro.request) {
  const parsedPaginationParam = Number(
    new URL(Astro.request.url).searchParams.get(searchParam),
  );

  if (Number.isInteger(parsedPaginationParam)) {
    index = clamp(
      parsedPaginationParam,
      0,
      chunks.length - 1,
    );
  }
}

const hasPrev = index > 0;
const hasNext = index < chunks.length - 1;
const data = chunks[index];
---

<Section heading="Stars"
  ><p class="max-w-3xl mt-3 font-serif leading-relaxed tracking-widest">
    A recent selection of projects that I've{" "}
    <StyledTextLink href="https://github.com/philwolstenholme?tab=stars">
      starred on GitHub</StyledTextLink
    >.
  </p>
  <div class="mt-8">
    <ul class="grid gap-4 grid-cols-[repeat(auto-fit,minmax(330px,1fr))]">
      {
        data?.map((star) => {
          const hasSensibleDescription = Boolean(
            star.description && star.description.length > 1,
          );

          return (
            <li class="expand-clickable-area shadow border rounded flex flex-col bg-white/50">
              <a
                href={star.html_url}
                class="text-binding-dark bg-graph-paper font-bold font-mono p-4 flex-1"
                title={hasSensibleDescription ? star.description : undefined}
              >
                {star.full_name}
              </a>
              {hasSensibleDescription && (
                <>
                  <span class="p-4 border-t border-black">
                    <p
                      class="text-xs truncate motion-safe:group-data-[in-view]/section:animate-typewriter"
                      style={{
                        "animation-delay": `${(Math.random() + 0.1).toFixed(2)}s`,
                        "animation-duration": `${(Math.random() + 0.1).toFixed(2)}s`,
                        // animation:
                        //   "typewriter 3s steps(69) 1 normal both",
                        // "animation-timeline": "view(60% 0%)",
                      }}
                      title={star.description}
                    >
                      {star.description}
                    </p>
                  </span>
                </>
              )}
            </li>
          );
        })
      }
    </ul>
    <div class="flex justify-center mt-4 gap-4">
      {
        hasPrev && (
          <StyledTextLink
            href={
              index === 1
                ? `/#stars`
                : `/?githubStars=${index - 1}#stars`
            }
          >
            &larr; Previous
          </StyledTextLink>
        )
      }
      {
        hasNext && (
          <StyledTextLink href={`?githubStars=${index + 1}#stars`}>
            Next &rarr;
          </StyledTextLink>
        )
      }
    </div>
  </div>
</Section>
